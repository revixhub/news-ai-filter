#!/usr/bin/env python3
"""
Setup script –¥–ª—è Marketing Digest Bot
–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø—Ä–æ–µ–∫—Ç–∞
"""

import os
import sys
import shutil
from pathlib import Path

def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python"""
    if sys.version_info < (3, 10):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.10 –∏–ª–∏ –≤—ã—à–µ")
        print(f"   –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: {sys.version_info.major}.{sys.version_info.minor}")
        sys.exit(1)
    print(f"‚úÖ Python {sys.version_info.major}.{sys.version_info.minor} - OK")

def create_directories():
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–ø–æ–∫"""
    directories = ['data', 'logs', 'data/digests']
    
    for directory in directories:
        path = Path(directory)
        path.mkdir(exist_ok=True)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: {directory}")

def setup_env_file():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π–ª–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    env_example = Path("env.example")
    env_file = Path(".env")
    
    if not env_file.exists():
        if env_example.exists():
            shutil.copy2(env_example, env_file)
            print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env –∏–∑ env.example")
            print("‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å API –∫–ª—é—á–∏ –≤ .env —Ñ–∞–π–ª–µ!")
        else:
            print("‚ùå –§–∞–π–ª env.example –Ω–µ –Ω–∞–π–¥–µ–Ω")
    else:
        print("‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

def check_requirements():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    requirements_file = Path("requirements.txt")
    
    if not requirements_file.exists():
        print("‚ùå –§–∞–π–ª requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    print("üì¶ –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
    print("   pip install -r requirements.txt")

def show_next_steps():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏"""
    print("\n" + "="*50)
    print("üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("="*50)
    print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª:")
    print("   - –î–æ–±–∞–≤—å—Ç–µ TELEGRAM_BOT_TOKEN")
    print("   - –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à USER_ID –≤ ALLOWED_USER_IDS")
    print("   - –î–æ–±–∞–≤—å—Ç–µ OPENAI_API_KEY –∏–ª–∏ ANTHROPIC_API_KEY")
    print("   - –î–æ–±–∞–≤—å—Ç–µ Telegram API –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–±–æ—Ä–∞ –∫–∞–Ω–∞–ª–æ–≤")
    print("\n2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
    print("   pip install -r requirements.txt")
    print("\n3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞:")
    print("   python main.py")
    print("\nüìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: README.md")
    print("üÜò –ü–æ–º–æ—â—å: /help –≤ –±–æ—Ç–µ")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Marketing Digest Bot")
    print("="*40)
    
    try:
        check_python_version()
        create_directories()
        setup_env_file()
        check_requirements()
        show_next_steps()
        
    except KeyboardInterrupt:
        print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main() 